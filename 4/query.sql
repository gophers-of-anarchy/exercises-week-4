-- Section1
    CREATE INDEX created_at_index
    on orders (created_at, total);

-- Section2
    CREATE INDEX total_order_index
    ON orders (user_id, created_at, total);

-- Section3
SELECT calendar.date AS date, COALESCE(SUM(orders.total), 0) AS total_amount
FROM (
    SELECT DATE_ADD(min_date, INTERVAL (t4.i * 1000 + t3.i * 100 + t2.i * 10 + t1.i) DAY) AS date
    FROM
        (SELECT MIN(DATE(created_at)) AS min_date, MAX(DATE(created_at)) AS max_date FROM orders) AS date_range,
        (SELECT 0 AS i UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) AS t1,
        (SELECT 0 AS i UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) AS t2,
        (SELECT 0 AS i UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) AS t3,
        (SELECT 0 AS i UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) AS t4
    WHERE DATE_ADD(min_date, INTERVAL (t4.i * 1000 + t3.i * 100 + t2.i * 10 + t1.i) DAY) BETWEEN min_date AND max_date
) AS calendar
LEFT JOIN orders ON DATE(orders.created_at) = calendar.date
GROUP BY calendar.date
ORDER BY calendar.date ASC;
